spring:
  application:
    name: backend
  config:
    import: optional:file:.env[.properties]


  # ===============================
  # JPA / Hibernate
  # ===============================
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: false

  # ===============================
  # kafka
  # ===============================
  kafka:
    consumer:
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  flyway:
    enabled: true
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    locations: classpath:db/migration
    baseline-on-migrate: false


  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_SERVER_USERNAME}   # 보내는 메일 주소
    password: ${MAIL_SERVER_PASSWORD}         # 앱 비밀번호 (계정보안 > 앱비밀번호 발급)
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# ===============================
# Server Port
# ===============================
server:
  port: 8080


# ===============================
# Debug mode
# ===============================
logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# Swagger URL
springdoc:
  api-docs:
    path: /v3/api-docs
    resolve-extensions-properties: false
  swagger-ui:
    path: /swagger-ui.html



aws:
  access-key: ${AWS_IAM_ACCESS_KEY}
  secret-key: ${AWS_IAM_SECRET_KEY}
  region: ap-northeast-2

firebase:
  json-base64: ${FIREBASE_JSON_BASE64}

grafana:
  url:
    outer: ${GRAFANA_URL_OUTER}
    inter: ${GRAFANA_URL_INTER}
  api-key: ${GRAFANA_API_KEY}
  org-id: 1
  datasource-uid: ${GRAFANA_DATASOURCE_UID}

# FastAPI URL
fastapi:
  base-url: ${FASTAPI_URL:http://localhost:8000}
  predict-endpoint: /predict-from-s3  # 슬래시(/) 포함

webhook:
  slack:
    equip_url: ${SLACK_WEBHOOK_EQUIP_URL}
